include(${CMAKE_SOURCE_DIR}/cmake/pr_common.cmake)

set(UNIRENDER_CYCLES_ENABLE_DEPENDENCIES 1 CACHE BOOL "Enable project dependencies?")

set(DEPENDENCY_CYCLES_LIBRARY_LOCATION "" CACHE FILEPATH "Path to cycles libraries.")
set(DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION "" CACHE FILEPATH "Path to cycles dependencies.")

option(ROLLBACK_CYCLES_4_1_1 "Enable Rollback to Cycles 4.1.1" OFF)

set(PROJ_NAME UniRender_cycles)
pr_add_library(${PROJ_NAME} SHARED)

pr_add_dependency(${PROJ_NAME} util_raytracing TARGET PUBLIC)
pr_add_dependency(${PROJ_NAME} spdlog TARGET PUBLIC)

pr_init_module(${PROJ_NAME})

pr_add_external_dependency(${PROJ_NAME} cycles INCLUDE)
pr_add_external_dependency(${PROJ_NAME} cycles_atomic INCLUDE)
pr_add_external_dependency(${PROJ_NAME} cycles_pugixml INCLUDE)
pr_add_external_dependency(${PROJ_NAME} cycles_openimageio INCLUDE)
pr_add_external_dependency(${PROJ_NAME} cycles_openimagedenoise INCLUDE)
pr_add_external_dependency(${PROJ_NAME} cycles_openexr INCLUDE)
pr_add_external_dependency(${PROJ_NAME} cycles_embree INCLUDE)
pr_add_external_dependency(${PROJ_NAME} cycles_tbb LIBRARY)
pr_add_external_dependency(${PROJ_NAME} cycles_zstd LIBRARY)
if(WIN32)
	pr_add_external_dependency(${PROJ_NAME} cycles_glog LIBRARY)
	pr_add_external_dependency(${PROJ_NAME} gflags LIBRARY)
endif()
# pr_add_external_dependency(${PROJ_NAME} glew LIBRARY)
pr_add_external_dependency(${PROJ_NAME} tiff LIBRARY)
pr_add_external_dependency(${PROJ_NAME} cycles_lpng LIBRARY)
pr_add_external_dependency(${PROJ_NAME} zlib LIBRARY)
pr_add_external_dependency(${PROJ_NAME} jpeg LIBRARY)
pr_add_external_dependency(${PROJ_NAME} lz4 LIBRARY)

pr_add_external_dependency(${PROJ_NAME} openexr_imath LIBRARY)
pr_add_external_dependency(${PROJ_NAME} openexr_iex LINK_ONLY)
pr_add_external_dependency(${PROJ_NAME} openexr_ilmthread LINK_ONLY)
pr_add_external_dependency(${PROJ_NAME} openexr LINK_ONLY)
pr_add_external_dependency(${PROJ_NAME} openexr_core LINK_ONLY)
pr_add_external_dependency(${PROJ_NAME} openexr_util LINK_ONLY)

# These have to match the definitions in the cycles project!
pr_add_compile_definitions(${PROJ_NAME}
	-DWITH_HIP
	-DWITH_HIP_DYNLOAD
	-DWITH_OPTIX
	-DWITH_EMBREE
	-DEMBREE_MAJOR_VERSION=4
	-DWITH_OPENIMAGEDENOISE
	-DWITH_ALEMBIC
	-DWITH_OPENVDB
	-DWITH_NANOVDB
	-DWITH_OPENSUBDIV
	-DWITH_OCIO
	-DWITH_SYSTEM_PUGIXML
	-DWITH_KERNEL_SSE42
	-DWITH_KERNEL_AVX2
	PUBLIC
)
if(WIN32)
	pr_add_compile_definitions(${PROJ_NAME}
		-DWITH_CUDA
		-DWITH_CUDA_DYNLOAD
	)
endif()
pr_add_compile_definitions(${PROJ_NAME} -DCCL_NAMESPACE_BEGIN=namespace\ ccl\ { PUBLIC)
pr_add_compile_definitions(${PROJ_NAME} -DCCL_NAMESPACE_END=} PUBLIC)
if(ROLLBACK_CYCLES_4_1_1)
	pr_add_compile_definitions(${PROJ_NAME} -DCYCLES_ROLLBACK_411)
endif()

if(WIN32)
	pr_add_compile_definitions(${PROJ_NAME} -DWITH_CYCLES_LOGGING)
endif()
pr_add_compile_definitions(${PROJ_NAME} -DGLOG_NO_ABBREVIATED_SEVERITIES -DGOOGLE_GLOG_DLL_DECL=__declspec\(dllexport\))

if(WIN32)
	target_link_libraries(${PROJ_NAME} PRIVATE
		opengl32
		glu32
		version
		shlwapi
	)
endif()

if(WIN32)
	set(LIB_PREFIX "")
	set(LIB_EXT ".lib")
else()
	set(LIB_PREFIX "lib")
	set(LIB_EXT ".a")
endif()

set(DEPENDENCY_CYCLES_UTIL_LIBRARY ${DEPENDENCY_CYCLES_LIBRARY_LOCATION}/${LIB_PREFIX}cycles_util${LIB_EXT} CACHE PATH "Path to library." FORCE)
set(DEPENDENCY_CYCLES_DEVICE_LIBRARY ${DEPENDENCY_CYCLES_LIBRARY_LOCATION}/${LIB_PREFIX}cycles_device${LIB_EXT} CACHE PATH "Path to library." FORCE)
set(DEPENDENCY_CYCLES_KERNEL_LIBRARY ${DEPENDENCY_CYCLES_LIBRARY_LOCATION}/${LIB_PREFIX}cycles_kernel${LIB_EXT} CACHE PATH "Path to library." FORCE)
set(DEPENDENCY_CYCLES_GRAPH_LIBRARY ${DEPENDENCY_CYCLES_LIBRARY_LOCATION}/${LIB_PREFIX}cycles_graph${LIB_EXT} CACHE PATH "Path to library." FORCE)
set(DEPENDENCY_CYCLES_SUBD_LIBRARY ${DEPENDENCY_CYCLES_LIBRARY_LOCATION}/${LIB_PREFIX}cycles_subd${LIB_EXT} CACHE PATH "Path to library." FORCE)
set(DEPENDENCY_CYCLES_BVH_LIBRARY ${DEPENDENCY_CYCLES_LIBRARY_LOCATION}/${LIB_PREFIX}cycles_bvh${LIB_EXT} CACHE PATH "Path to library." FORCE)
set(DEPENDENCY_CYCLES_CUEW_LIBRARY ${DEPENDENCY_CYCLES_LIBRARY_LOCATION}/${LIB_PREFIX}extern_cuew${LIB_EXT} CACHE PATH "Path to library." FORCE)
set(DEPENDENCY_CYCLES_INTEGRATOR_LIBRARY ${DEPENDENCY_CYCLES_LIBRARY_LOCATION}/${LIB_PREFIX}cycles_integrator${LIB_EXT} CACHE PATH "Path to library." FORCE)
set(DEPENDENCY_CYCLES_SCENE_LIBRARY ${DEPENDENCY_CYCLES_LIBRARY_LOCATION}/${LIB_PREFIX}cycles_scene${LIB_EXT} CACHE PATH "Path to library." FORCE)
set(DEPENDENCY_CYCLES_SESSION_LIBRARY ${DEPENDENCY_CYCLES_LIBRARY_LOCATION}/${LIB_PREFIX}cycles_session${LIB_EXT} CACHE PATH "Path to library." FORCE)
set(DEPENDENCY_CYCLES_SKY_LIBRARY ${DEPENDENCY_CYCLES_LIBRARY_LOCATION}/${LIB_PREFIX}extern_sky${LIB_EXT} CACHE PATH "Path to library." FORCE)
set(DEPENDENCY_CYCLES_HIPEW_LIBRARY ${DEPENDENCY_CYCLES_LIBRARY_LOCATION}/${LIB_PREFIX}extern_hipew${LIB_EXT} CACHE PATH "Path to library." FORCE)

if(WIN32)
	set(CUSTOM_LIB_EXT "${LIB_EXT}")

	set(OIIO_LOCATION ${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/openimageio)
	set(OIDN_LOCATION ${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/openimagedenoise)
	set(OSD_LOCATION ${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/opensubdiv)
	set(OCIO_LOCATION ${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/opencolorio)
else()
	set(CUSTOM_LIB_EXT ".so")

	set(OIIO_LOCATION ${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/oiio)
	set(OIDN_LOCATION ${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/oidn)
	set(OSD_LOCATION ${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/osd)
	set(OCIO_LOCATION ${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/ocio)
endif()

# set(CYCLES_LIB_OSL_COMP "${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/osl/lib/${LIB_PREFIX}oslcomp${CUSTOM_LIB_EXT}")
# set(CYCLES_LIB_OSL_EXEC "${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/osl/lib/${LIB_PREFIX}oslexec${CUSTOM_LIB_EXT}")
# set(CYCLES_LIB_OSL_NOISE "${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/osl/lib/${LIB_PREFIX}oslnoise${CUSTOM_LIB_EXT}")
# set(CYCLES_LIB_OSL_QUERY "${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/osl/lib/${LIB_PREFIX}oslquery${CUSTOM_LIB_EXT}")

set(CYCLES_LIB_OPENVDB "${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/openvdb/lib/${LIB_PREFIX}openvdb${CUSTOM_LIB_EXT}")
set(CYCLES_LIB_OPENSUBDIV "${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/opensubdiv/lib/${LIB_PREFIX}osdCPU${CUSTOM_LIB_EXT}")
set(CYCLES_LIB_OIIO "${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/openimageio/lib/${LIB_PREFIX}OpenImageIO${CUSTOM_LIB_EXT}")
set(CYCLES_LIB_OIIO_UTIL "${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/openimageio/lib/${LIB_PREFIX}OpenImageIO_Util${CUSTOM_LIB_EXT}")
set(CYCLES_LIB_OCIO "${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/opencolorio/lib/${LIB_PREFIX}OpenColorIO${CUSTOM_LIB_EXT}")

if(UNIX)
	set(CYCLES_SHARED_INSTALL_LIBS
		${CYCLES_LIB_OPENVDB}
		${CYCLES_LIB_OPENSUBDIV}
		${CYCLES_LIB_OIIO}
		${CYCLES_LIB_OIIO_UTIL}
		${CYCLES_LIB_OCIO}
  
		CACHE PATH "Path to library." FORCE)
endif()

SET(CYCLES_LIBRARIES
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMAggressiveInstCombine${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMAnalysis${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMAsmParser${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMBinaryFormat${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMBitReader${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMBitWriter${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMBitstreamReader${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMCFGuard${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMCodeGen${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMCore${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMCoroutines${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMCoverage${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMDWARFLinker${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMDebugInfoCodeView${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMDebugInfoDWARF${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMDebugInfoGSYM${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMDebugInfoMSF${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMDebugInfoPDB${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMDemangle${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMDlltoolDriver${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMExecutionEngine${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMExtensions${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMFileCheck${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMFrontendOpenACC${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMFrontendOpenMP${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMFuzzMutate${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMGlobalISel${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMIRReader${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMInstCombine${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMInstrumentation${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMInterfaceStub${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMInterpreter${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMJITLink${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMLTO${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMLibDriver${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMLineEditor${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMLinker${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMMC${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMMCA${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMMCDisassembler${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMMCJIT${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMMCParser${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMMIRParser${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMObjCARCOpts${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMObject${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMOption${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMOrcJIT${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMOrcShared${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMOrcTargetProcess${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMPasses${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMProfileData${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMRemarks${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMRuntimeDyld${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMScalarOpts${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMSelectionDAG${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMSupport${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMSymbolize${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMTableGen${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMTarget${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMTextAPI${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMTransformUtils${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMVectorize${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMWindowsManifest${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMX86AsmParser${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMX86CodeGen${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMX86Desc${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMX86Disassembler${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMX86Info${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMXRay${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMipo${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMLTO${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMRemarks${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMAsmPrinter${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangAPINotes${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangARCMigrate${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangAST${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangASTMatchers${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangAnalysis${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangBasic${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangCodeGen${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangCrossTU${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangDependencyScanning${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangDirectoryWatcher${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangDriver${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangDynamicASTMatchers${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangEdit${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangFormat${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangFrontend${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangFrontendTool${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangHandleCXX${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangHandleLLVM${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangIndex${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangIndexSerialization${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangLex${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangParse${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangRewrite${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangRewriteFrontend${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangSema${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangSerialization${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangStaticAnalyzerCheckers${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangStaticAnalyzerCore${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangStaticAnalyzerFrontend${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangTooling${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangToolingASTDiff${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangToolingCore${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangToolingInclusions${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangToolingRefactoring${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangToolingSyntax${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangTransformer${LIB_EXT}

	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/embree/lib/${LIB_PREFIX}embree4${CUSTOM_LIB_EXT}
	${CYCLES_LIB_OPENVDB}
	${CYCLES_LIB_OPENSUBDIV}
	${CYCLES_LIB_OIIO}
	${CYCLES_LIB_OIIO_UTIL}
	${CYCLES_LIB_OCIO}

	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/alembic/lib/${LIB_PREFIX}Alembic${LIB_EXT}

	${DEPENDENCY_CYCLES_UTIL_LIBRARY}
	${DEPENDENCY_CYCLES_DEVICE_LIBRARY}
	${DEPENDENCY_CYCLES_KERNEL_LIBRARY}
	${DEPENDENCY_CYCLES_GRAPH_LIBRARY}
	${DEPENDENCY_CYCLES_SUBD_LIBRARY}
	${DEPENDENCY_CYCLES_BVH_LIBRARY}
	${DEPENDENCY_CYCLES_CUEW_LIBRARY}
	${DEPENDENCY_CYCLES_INTEGRATOR_LIBRARY}
	${DEPENDENCY_CYCLES_SCENE_LIBRARY}
	${DEPENDENCY_CYCLES_SESSION_LIBRARY}
	${DEPENDENCY_CYCLES_SKY_LIBRARY}
	${DEPENDENCY_CYCLES_HIPEW_LIBRARY}
)

if(WIN32)
	SET(CYCLES_LIBRARIES
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/pystring/lib/${LIB_PREFIX}pystring${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/pugixml/lib/${LIB_PREFIX}pugixml${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/openjpeg/lib/${LIB_PREFIX}openjp2${LIB_EXT}
		${CYCLES_LIBRARIES}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/libclang${LIB_EXT}
	    ${OIDN_LOCATION}/lib/${LIB_PREFIX}OpenImageDenoise${LIB_EXT}

		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/openexr/lib/${LIB_PREFIX}Iex${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/openexr/lib/${LIB_PREFIX}IlmThread${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/imath/lib/${LIB_PREFIX}Imath${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/openexr/lib/${LIB_PREFIX}OpenEXR${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/openexr/lib/${LIB_PREFIX}OpenEXRCore${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/openexr/lib/${LIB_PREFIX}OpenEXRUtil${LIB_EXT}

		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/webp/lib/libwebp${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/webp/lib/libwebpdemux${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/webp/lib/libwebpmux${LIB_EXT}
	)
else()
	SET(CYCLES_LIBRARIES
		${CYCLES_LIBRARIES}
	)
endif()

target_link_libraries(${PROJ_NAME} PRIVATE ${CYCLES_LIBRARIES})
if(UNIX)
	# Link a few more times on Linux so we don't have to bother trying to find the right linking order...
	target_link_libraries(${PROJ_NAME} PRIVATE ${CYCLES_LIBRARIES})
	
	foreach(LIB IN LISTS LIBRARIES)
		target_link_libraries(${PROJ_NAME} PRIVATE ${${LIB}})
	endforeach(LIB)
	
	target_link_libraries(${PROJ_NAME} PRIVATE ${CYCLES_LIBRARIES})
endif()

pr_finalize(${PROJ_NAME})

